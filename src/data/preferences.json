{
  "comment.diff.contextLines": {
    "type": "integer",
    "default": 3,
    "description": "Default number of context lines added to diffs when displaying comment chains.  Can be overridden by 'context' URI parameter."
  },
  "commit.diff.collapseSimpleHunks": {
    "type": "boolean",
    "default": false,
    "description": "When a hunk in a diff contains only deleted or only inserted lines, collapse the \"other\" side, so that the hunk is displayed as a single wide column.  NOT FULLY FUNCTIONAL!"
  },
  "commit.diff.compactMode": {
    "type": "boolean",
    "default": true,
    "description": "Generate more compact HTML for diffs, and generate some HTML on-demand client-side.  Faster download and initial rendering, and slower interaction."
  },
  "commit.diff.contextLines": {
    "type": "integer",
    "default": 5,
    "description": "Default number of context lines added to diffs when displaying commits.  Can be overridden by 'context' URI parameter."
  },
  "commit.diff.highlightIllegalWhitespace": {
    "type": "boolean",
    "default": true,
    "description": "Use an angry red color scheme for illegal whitespace (trailing whitespace or tabs in files with \"intent-tabs-mode: nil\".)"
  },
  "commit.diff.rulerColumn": {
    "type": "integer",
    "default": 0,
    "description": "The column at which a ruler is shown. Can be set to 0 to disable the ruler.",
    "relevance": { "repository": true }
  },
  "commit.diff.visualTabs": {
    "type": "boolean",
    "default": false,
    "description": "Replace tab characters with U+2192 (RIGHTWARDS ARROW) styled to the correct width (taking the file's Emacs mode-line into account.)"
  },
  "commit.expandAllFiles": {
    "type": "boolean",
    "default": false,
    "description": "On the 'showcommit' page, expand the diffs in all files on page load."
  },
  "commit.expandFilesLimit": {
    "type": "integer",
    "default": 0,
    "description": "If 'commit.expandAllFiles' is enabled, and this limit is non-zero, all files are initially collapsed if the diff contains changes in more files than this limit."
  },
  "dashboard.defaultGroups": {
    "type": "string",
    "default": "owned,draft,active,watched",
    "description": "Review groups to show on the dashboard by default.  Available groups are owned, draft, active, watched, open and closed."
  },
  "debug.enabled": {
    "type": "boolean",
    "default": false,
    "description": "Enable debugging preferences."
  },
  "debug.extensions.customProcessCommits": {
    "type": "boolean",
    "default": false,
    "description": "Enable button for performing installed ProcessCommits hooks on arbitrary sets of commits for testing."
  },
  "debug.profiling.abortChanges": {
    "type": "boolean",
    "default": false,
    "description": "Enable profiling of /abortchanges."
  },
  "debug.profiling.databaseQueries": {
    "type": "boolean",
    "default": false,
    "description": "Enable profiling of database queries."
  },
  "debug.profiling.pageGeneration": {
    "type": "boolean",
    "default": false,
    "description": "Enable profiling of generation of various pages.  Results are emitted as a comment at the end of the HTML."
  },
  "debug.profiling.submitChanges": {
    "type": "boolean",
    "default": false,
    "description": "Enable profiling of /submitchanges."
  },
  "defaultPage": {
    "type": "string",
    "default": "home",
    "description": "The default page displayed when accessing the system."
  },
  "defaultRepository": {
    "type": "string",
    "default": "",
    "description": "Name of default repository.  In situations where the repository is not implied, this is the one that is used, or preferred."
  },
  "email.activated": {
    "type": "boolean",
    "default": true,
    "description": "Must be enabled before the system sends any emails to the user."
  },
  "email.comment.contextLines": {
    "type": "integer",
    "default": 0,
    "description": "Default number of context lines added to code excerpts when displaying comment threads in emails."
  },
  "email.enableAssociationRecipients": {
    "type": "boolean",
    "default": false,
    "description": "Add phony recipients to review emails representing your associations with the review.",
    "relevance": { "repository": true }
  },
  "email.ignoreOwnChanges": {
    "type": "boolean",
    "default": false,
    "description": "Don't send emails about own changes (reviewing, commits added to reviews and rebased reviews.)"
  },
  "email.lineLength": {
    "type": "integer",
    "default": 80,
    "description": "Maximum line length in emails sent.  Plain text will be reflowed to adhere to this.  Diffs and other non-prose items are never reflowed."
  },
  "email.listId": {
    "type": "string",
    "default": "",
    "description": "Identifier used to construct a List-Id header for review emails.  Used for the $id in \"<$id.$hostname>\" in the header value.",
    "relevance": { "repository": true }
  },
  "email.newReview.diff.contextLines": {
    "type": "integer",
    "default": 3,
    "description": "Number of context lines added to diffs in the email sent when a new review is submitted."
  },
  "email.newReview.diff.maxLines": {
    "type": "integer",
    "default": 250,
    "description": "Maximum number of lines of diffs to include in the email sent when a new review is submitted.  If exceeded, no diffs are included at all."
  },
  "email.newReview.displayCommits": {
    "type": "boolean",
    "default": true,
    "description": "Include a list of all commits to be reviewed in the email sent when a new review is submitted."
  },
  "email.newReview.displayDiffs": {
    "type": "boolean",
    "default": true,
    "description": "Include diffs of each commit to be reviewed in the email sent when a new review is submitted."
  },
  "email.newReview.displayReviewers": {
    "type": "boolean",
    "default": true,
    "description": "Include a list of all assigned reviewers in the email sent when a new review is submitted."
  },
  "email.newReview.displayStats": {
    "type": "boolean",
    "default": false,
    "description": "Include --stat output for commits added to the review."
  },
  "email.newReview.displayWatchers": {
    "type": "boolean",
    "default": true,
    "description": "Include a list of all additional watchers in the email sent when a new review is submitted."
  },
  "email.newReview.stats.maxLines": {
    "type": "integer",
    "default": 250,
    "description": "Maximum number of lines of commit stats to include in the email sent when a review is submitted.  If exceeded, no stats are included at all."
  },
  "email.subjectLine.newReview": {
    "type": "string",
    "default": "New Review: %(summary)s",
    "description": "Python format string for subject line of email sent for newly created reviews."
  },
  "email.subjectLine.newishReview": {
    "type": "string",
    "default": "New(ish) Review: %(summary)s",
    "description": "Python format string for subject line of email sent for new(ish) reviews."
  },
  "email.subjectLine.pingedReview": {
    "type": "string",
    "default": "Pinged Review: %(summary)s",
    "description": "Python format string for subject line of email sent when someone pings a review."
  },
  "email.subjectLine.updatedReview.assignmentsChanged": {
    "type": "string",
    "default": "Updated Review: %(summary)s",
    "description": "Python format string for subject line of email sent when someone changes review assignments."
  },
  "email.subjectLine.updatedReview.commitsPushed": {
    "type": "string",
    "default": "Updated Review: %(summary)s",
    "description": "Python format string for subject line of email sent when someone pushes additional commits to a review."
  },
  "email.subjectLine.updatedReview.parentFiltersApplied": {
    "type": "string",
    "default": "Updated Review: %(summary)s",
    "description": "Python format string for subject line of email sent when someone applies parent repository filters to a review."
  },
  "email.subjectLine.updatedReview.reviewRebased": {
    "type": "string",
    "default": "Updated Review: %(summary)s",
    "description": "Python format string for subject line of email sent when someone rebases a review branch."
  },
  "email.subjectLine.updatedReview.submittedChanges": {
    "type": "string",
    "default": "Updated Review: %(summary)s",
    "description": "Python format string for subject line of email sent when someone submits changes to a review."
  },
  "email.updatedReview.commentThreading": {
    "type": "boolean",
    "default": false,
    "description": "Send emails containing comments so that comment threads form email threads.  This will increase the number of emails sent from Critic to the user."
  },
  "email.updatedReview.diff.contextLines": {
    "type": "integer",
    "default": 3,
    "description": "Number of context lines added to diffs in the email sent when a review is updated."
  },
  "email.updatedReview.diff.maxLines": {
    "type": "integer",
    "default": 250,
    "description": "Maximum number of lines of diffs to include in the email sent when a review is updated.  If exceeded, no diffs are included at all."
  },
  "email.updatedReview.displayCommits": {
    "type": "boolean",
    "default": true,
    "description": "Include a list of all new commits to be reviewed in the email sent when a review is updated."
  },
  "email.updatedReview.displayStats": {
    "type": "boolean",
    "default": false,
    "description": "Include --stat output for commits added to the review."
  },
  "email.updatedReview.quotedComments": {
    "type": "string",
    "default": "all",
    "description": "Selection of comments in a comment thread that are quoted when new replies are submitted."
  },
  "email.updatedReview.relevantChangesOnly": {
    "type": "boolean",
    "default": false,
    "description": "Only generate emails about reviewed files and written comments that are relevant."
  },
  "email.updatedReview.stats.maxLines": {
    "type": "integer",
    "default": 250,
    "description": "Maximum number of lines of commit stats to include in the email sent when a review is updated.  If exceeded, no stats are included at all."
  },
  "email.urlType": {
    "type": "string",
    "default": "main",
    "description": "Type of URLs used in emails."
  },
  "repository.postReceiveTimeout": {
    "type": "integer",
    "default": 60,
    "description": "Maximum number of seconds to wait for feedback in the post-receive hook.  Note: Timing out does not affect the end result; updates are processed in the background."
  },
  "repository.urlType": {
    "type": "string",
    "default": "http",
    "description": "Type of repository URL to display."
  },
  "review.applyUpstreamFilters": {
    "type": "boolean",
    "default": true,
    "description": "If enabled, filters from upstream repositories are applied when creating review via push."
  },
  "review.branchArchiveDelay.closed": {
    "type": "integer",
    "default": 7,
    "description": "If non-zero, archive review branches belonging to closed reviews this number of days after the review was (last) closed.",
    "relevance": { "repository": true }
  },
  "review.branchArchiveDelay.dropped": {
    "type": "integer",
    "default": 1,
    "description": "If non-zero, archive review branches belonging to dropped reviews this number of days after the review was (last) dropped.",
    "relevance": { "repository": true }
  },
  "review.createViaPush": {
    "type": "boolean",
    "default": false,
    "description": "If enabled, reviews can be requested by pushing a new branch whose name starts with \"r/\" to the repository."
  },
  "review.defaultOptOut": {
    "type": "boolean",
    "default": false,
    "description": "Opt out of receiving review emails (except for \"New review\" emails) by default.",
    "relevance": { "repository": true,
                   "filter": true }
  },
  "review.dropAnyReview": {
    "type": "boolean",
    "default": false,
    "description": "Show the \"Drop Review\" button on the front-page of every review, instead of only those you own."
  },
  "review.pingAnyReview": {
    "type": "boolean",
    "default": false,
    "description": "Show the \"Ping Review\" button on the front-page of every review, instead of only those you own."
  },
  "review.updateCheckInterval": {
    "type": "integer",
    "default": 300,
    "description": "Check for updates of reviews every N seconds while displaying review front pages.  If zero, the check is disabled."
  },
  "review.useMustRevalidate": {
    "type": "boolean",
    "default": true,
    "description": "Deliver review front-pages with \"Cache-Control: must-revalidate\" to prevent history navigation to stale versions."
  },
  "style.defaultFont": {
    "type": "string",
    "default": "font-size: 10pt; font-family: sans-serif",
    "description": "Font setting applied to the BODY element on every page."
  },
  "style.sourceFont": {
    "type": "string",
    "default": "font-size: 10pt; font-family: monospace",
    "description": "Font setting applied to source code text in diff display."
  },
  "style.tutorialFont": {
    "type": "string",
    "default": "font-size: 11pt; font-family: serif",
    "description": "Font setting applied to tutorial text."
  },
  "timezone": {
    "type": "string",
    "default": "Universal/UTC",
    "description": "Timezone to present (most) dates in."
  },
  "ui.asynchronousReviewMarking": {
    "type": "boolean",
    "default": false,
    "description": "Mark changes as reviewed (or not reviewed) using an asynchronous XMLHttpRequest."
  },
  "ui.convertIssueToNote": {
    "type": "boolean",
    "default": false,
    "description": "Enable \"Convert To Note\" operation for issues.  This operation is considered an inferior alternative to resolving an issue; use of it is not recommended."
  },
  "ui.keyboardShortcuts": {
    "type": "boolean",
    "default": true,
    "description": "Enabled keyboard shortcuts on those pages that define any."
  },
  "ui.resolveIssueWarning": {
    "type": "boolean",
    "default": true,
    "description": "Show a warning when resolving an issue raised by another user."
  },
  "ui.title.showReview": {
    "type": "string",
    "default": "%(id)s (%(progress)s) - %(summary)s - Opera Critic",
    "description": "Python format string for title of review front-page documents."
  }
}
